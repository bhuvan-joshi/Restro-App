name: Build and Deploy

on:
  pull_request:
    branches: [ "develop" ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'ChattyWidgetBackend/**'

  push:
    branches: [ "develop" ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'ChattyWidgetBackend/**'

jobs:
  validate:
    if: github.event_name == 'pull_request'
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # React Validation
    - name: Setup Node.js
      if: contains(github.event.pull_request.changed_files, 'src/') || contains(github.event.pull_request.changed_files, 'public/')
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Test React
      if: contains(github.event.pull_request.changed_files, 'src/') || contains(github.event.pull_request.changed_files, 'public/')
      run: |
        npm install
        npm run build
        npm test
    
    # .NET Validation  
    - name: Setup .NET
      if: contains(github.event.pull_request.changed_files, 'ChattyWidgetBackend/')
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
    
    - name: Test API
      if: contains(github.event.pull_request.changed_files, 'ChattyWidgetBackend/')
      working-directory: ChattyWidgetBackend
      run: |
        dotnet restore
        dotnet build
        dotnet test

  deploy:
    if: github.event_name == 'push'
    runs-on: self-hosted
    needs: validate
    
    steps:
    - uses: actions/checkout@v4
    
    # React Deployment
    - name: Build React (dist)
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        run: |
          npm install
          npm run build
    
    - name: Deploy React to C:\inetpub\wwwroot\ChartWidget
      shell: powershell
      run: |
        $reactDest = "C:\inetpub\wwwroot\ChartWidget"
        if (-not (Test-Path $reactDest)) { New-Item -ItemType Directory -Path $reactDest -Force }
        Remove-Item "$reactDest\*" -Recurse -Force -ErrorAction SilentlyContinue
        Copy-Item -Path "./dist/*" -Destination $reactDest -Recurse -Force
        Write-Host "React dist/ deployed to $reactDest"
    
    # .NET Deployment
    - name: Deploy API to DC:\inetpub\wwwroot\ChattyWidgetAPI
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
        working-directory: ChattyWidgetBackend
        shell: powershell
        run: |
          $apiDest = "C:\inetpub\wwwroot\ChattyWidgetAPI"
          dotnet publish --configuration Release --output $apiDest
          Write-Host "API deployed to $apiDest"
    
    - name: Verify Deployments
      shell: powershell
      run: |
        Write-Host "üîç Deployment Verification:"
        Write-Host "React: $(if (Test-Path 'D:\reactAPP\index.html') { '' } else { '' })"
        Write-Host "API: $(if (Test-Path 'D:\dotnetAPI\*.dll') { '' } else { '' })"